openapi: 3.0.2
info:
  title: Redfish OAPI specification
  description: 'Partial Redfish OAPI specification for a limited client'
  version: 0.0.1
components:
  schemas:
    BootSource:
      type: string
      enum:
      - None
      - Pxe
      - Floppy
      - Cd
      - Usb
      - Hdd
      - BiosSetup
      - Utilities
      - Diags
      - UefiShell
      - UefiTarget
      - SDCard
      - UefiHttp
      - RemoteDrive
      - UefiBootNext
    BootSourceOverrideEnabled:
      type: string
      enum:
      - Once
      - Continuous
    State:
      type: string
      enum:
      - Enabled
      - Disabled
      - StandbyOffline
      - StandbySpare
      - InTest
      - Starting
      - Absent
      - UnavailableOffline
      - Deferring
      - Quiesced
      - Updating
    Health:
      type: string
      enum:
      - OK
      - Warning
      - Critical
    PowerState:
      type: string
      enum:
      - On
      - Off
      - PoweringOn
      - PoweringOff
    ResetType:
      type: string
      enum:
      - "On"
      - ForceOff
      - GracefulShutdown
      - GracefulRestart
      - ForceRestart
      - Nmi
      - ForceOn
      - PushPowerButton
      - PowerCycle
    IndicatorLED:
      type: string
      enum:
      - Unknown
      - Lit
      - Blinking
      - "Off"
    ManagerType:
      enum:
      - ManagementController
      - EnclosureManager
      - BMC
      - RackManager
      - AuxiliaryController
      - Service
      type: string
    ConnectedVia:
      enum:
      - NotConnected
      - URI
      - Applet
      - Oem
      type: string
    TransferMethod:
      enum:
      - Stream
      - Upload
      type: string
    TransferProtocolType:
      enum:
      - CIFS
      - FTP
      - SFTP
      - HTTP
      - HTTPS
      - NFS
      - SCP
      - TFTP
      type: string
    context:
      description: The OData description of a payload.
      format: uri-reference
      readOnly: true
      type: string
    count:
      description: The number of items in a collection.
      readOnly: true
      type: integer
    name:
      description: The name of the resource.
      readOnly: true
      type: string
    etag:
      description: The current ETag of the resource.
      readOnly: true
      type: string
    id:
      description: The name of the resource.
      readOnly: true
      type: string
    odataId:
      description: The unique identifier for a resource.
      format: uri-reference
      readOnly: true
      type: string
    idRef:
      additionalProperties: false
      description: A reference to a resource.
      properties:
        '@odata.id':
          $ref: '#/components/schemas/odataId'
      type: object
    nextLink:
      description: The URI to the resource containing the next set of partial members.
      format: uri-reference
      readOnly: true
      type: string
    rtype:
      description: The type of a resource.
      readOnly: true
      type: string
    UUID:
      pattern: ([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})
      type: string
    Message:
      additionalProperties: false
      properties:
        Message:
          readOnly: true
          type: string
        MessageArgs:
          items:
            type: string
          readOnly: true
          type: array
        MessageId:
          readOnly: true
          type: string
        RelatedProperties:
          items:
            type: string
          readOnly: true
          type: array
        Resolution:
          readOnly: true
          type: string
        Severity:
          readOnly: true
          type: string
      required:
      - MessageId
      type: object
    RedfishError:
      description: Contains an error payload from a Redfish Service.
      properties:
        error:
          properties:
            '@Message.ExtendedInfo':
              items:
                $ref: '#/components/schemas/Message'
              type: array
            code:
              readOnly: true
              type: string
            message:
              readOnly: true
              type: string
          required:
          - code
          - message
          type: object
      required:
      - error
      type: object
    Root:
      type: object
      additionalProperties: false
      description: Root redfish path.
      required:
      - '@odata.id'
      - '@odata.type'
      - 'Name'
      properties:
        'Id':
          $ref: '#/components/schemas/id'
        'Name':
          $ref: '#/components/schemas/name'
        'RedfishVersion':
          type: string
          description: redfish version
        'UUID':
          $ref: '#/components/schemas/UUID'
        '@odata.type':
          $ref: '#/components/schemas/rtype'
        '@odata.id':
          $ref: '#/components/schemas/odataId'
        '@Redfish.Copyright':
          type: string
          description: redfish copyright
        'Systems':
          $ref: '#/components/schemas/idRef'
        'Managers':
          $ref: '#/components/schemas/idRef'
    Collection:
      type: object
      additionalProperties: false
      description: A Collection of ComputerSystem resource instances.
      required:
      - 'Members'
      - '@odata.id'
      - '@odata.type'
      - 'Name'
      properties:
        '@odata.context':
          type: string
          description: context
        '@odata.etag':
          type: string
          description: etag
        '@odata.id':
          type: string
          description: id
        '@odata.type':
          type: string
          description: type
        'Description':
          type: string
          description: "description"
          nullable: true
          readOnly: true
        'Members':
          description: Contains the members of this collection.
          items:
            $ref: '#/components/schemas/idRef'
          readOnly: true
          type: array
        'Members@odata.count':
          $ref: '#/components/schemas/count'
        'Members@odata.nextLink':
          $ref: '#/components/schemas/nextLink'
        'Name':
          $ref: '#/components/schemas/name'
          readOnly: true
    Status:
      type: object
      additionalProperties: false
      properties:
        Health:
          $ref: '#/components/schemas/Health'
          nullable: true
          readOnly: true
        HealthRollup:
          $ref: '#/components/schemas/Health'
          nullable: true
          readOnly: true
        State:
          $ref: '#/components/schemas/State'
          nullable: true
          readOnly: true
    Boot:
      type: object
      additionalProperties: false
      properties:
        BootSourceOverrideEnabled:
          $ref: '#/components/schemas/BootSourceOverrideEnabled'
        BootSourceOverrideTarget:
          $ref: '#/components/schemas/BootSource'
        BootSourceOverrideTarget@Redfish.AllowableValues:
          type: array
          items:
            $ref: '#/components/schemas/BootSource'
    ProcessorSummary:
      type: object
      additionalProperties: false
      properties:
        Count:
          minimum: 0
          nullable: true
          readOnly: true
          type: integer
        Status:
          $ref: '#/components/schemas/Status'
    MemorySummary:
      type: object
      additionalProperties: false
      properties:
        TotalSystemMemoryGiB:
          minimum: 0
          nullable: true
          readOnly: true
          type: number
        TotalSystemPersistentMemoryGiB:
          minimum: 0
          nullable: true
          readOnly: true
          type: number
        Status:
          $ref: '#/components/schemas/Status'
    SystemLinks:
      type: object
      additionalProperties: false
      properties:
        Chassis:
          type: array
          items:
            $ref: '#/components/schemas/idRef'
        ManagedBy:
          type: array
          items:
            $ref: '#/components/schemas/idRef'
    ManagerLinks:
      type: object
      additionalProperties: false
      properties:
        ManagerForServers:
          type: array
          items:
            $ref: '#/components/schemas/idRef'
        ManagerForChassis:
          type: array
          items:
            $ref: '#/components/schemas/idRef'
        ManagerForSwitches:
          type: array
          items:
            $ref: '#/components/schemas/idRef'
        ManagerInChassis:
          type: array
          items:
            $ref: '#/components/schemas/idRef'
    ComputerSystemReset:
      type: object
      additionalProperties: false
      properties:
        target:
          $ref: '#/components/schemas/odataId'
        ResetType@Redfish.AllowableValues:
          type: array
          items:
            $ref: '#/components/schemas/ResetType'
    ResetRequestBody:
      additionalProperties: false
      properties:
        ResetType:
          $ref: '#/components/schemas/ResetType'
      type: object
    ComputerSystem:
      type: object
      additionalProperties: false
      description: Root redfish path.
      required:
      - '@odata.id'
      - '@odata.type'
      - 'Name'
      properties:
        'Id':
          $ref: '#/components/schemas/id'
        'Name':
          $ref: '#/components/schemas/name'
        'RedfishVersion':
          type: string
          description: redfish version
        'UUID':
          $ref: '#/components/schemas/UUID'
        '@odata.type':
          $ref: '#/components/schemas/rtype'
        '@odata.id':
          $ref: '#/components/schemas/odataId'
        '@odata.context':
          $ref: '#/components/schemas/context'
        '@Redfish.Copyright':
          type: string
          description: redfish copyright
        'Bios':
          $ref: '#/components/schemas/idRef'
        'Processors':
          $ref: '#/components/schemas/idRef'
        'Memory':
          $ref: '#/components/schemas/idRef'
        'EthernetInterfaces':
          $ref: '#/components/schemas/idRef'
        'SimpleStorage':
          $ref: '#/components/schemas/idRef'
        'PowerState':
          $ref: '#/components/schemas/PowerState'
        'Status':
          $ref: '#/components/schemas/Status'
        'Boot':
          $ref: '#/components/schemas/Boot'
        'ProcessorSummary':
          $ref: '#/components/schemas/ProcessorSummary'
        'MemorySummary':
          $ref: '#/components/schemas/MemorySummary'
        'IndicatorLED':
          $ref: '#/components/schemas/IndicatorLED'
        'Links':
          $ref: '#/components/schemas/SystemLinks'
        'Actions':
          type: object
          properties:
            "#ComputerSystem.Reset":
              $ref: '#/components/schemas/ComputerSystemReset'
    Manager:
      type: object
      additionalProperties: false
      description: Redfish manager resource.
      required:
      - '@odata.id'
      - '@odata.type'
      - 'Name'
      properties:
        'Id':
          $ref: '#/components/schemas/id'
        'Name':
          $ref: '#/components/schemas/name'
        'UUID':
          $ref: '#/components/schemas/UUID'
        'ServiceEntryPointUUID':
          $ref: '#/components/schemas/UUID'
        '@odata.type':
          $ref: '#/components/schemas/rtype'
        '@odata.id':
          $ref: '#/components/schemas/odataId'
        '@odata.context':
          $ref: '#/components/schemas/context'
        '@Redfish.Copyright':
          type: string
          description: redfish copyright
        'Model':
          nullable: true
          readOnly: true
          type: string
        'ManagerType':
          $ref: '#/components/schemas/ManagerType'
          readOnly: true
        'Status':
          $ref: '#/components/schemas/Status'
        'DateTime':
          #format: date-time
          format: string
          nullable: true
          readOnly: false
          type: string
        'DateTimeLocalOffset':
          description: 'The time offset from UTC that the DateTime property is set
            to in format: +06:00 .'
          nullable: true
          pattern: ([-+][0-1][0-9]:[0-5][0-9])
          readOnly: false
          type: string
        'Description':
          type: string
          description: "description"
          nullable: true
          readOnly: true
        'EthernetInterfaces':
          $ref: '#/components/schemas/idRef'
          readOnly: true
        'FirmwareVersion':
          nullable: true
          readOnly: true
          type: string
        'Links':
          $ref: '#/components/schemas/ManagerLinks'
        'PowerState':
          $ref: '#/components/schemas/PowerState'
        'VirtualMedia':
          $ref: '#/components/schemas/idRef'
          readOnly: true

    VirtualMedia:
      type: object
      additionalProperties: false
      description: Redfish virtual media resource for manager.
      required:
      - '@odata.id'
      - '@odata.type'
      - 'Name'
      properties:
        'Id':
          $ref: '#/components/schemas/id'
        'Name':
          $ref: '#/components/schemas/name'
        '@odata.type':
          $ref: '#/components/schemas/rtype'
        '@odata.id':
          $ref: '#/components/schemas/odataId'
        '@odata.context':
          $ref: '#/components/schemas/context'
        '@Redfish.Copyright':
          type: string
          description: redfish copyright
        'Description':
          type: string
          description: "description"
          nullable: true
          readOnly: true
        'Image':
          format: uri-reference
          nullable: true
          readOnly: false
          type: string
        'ImageName':
          nullable: true
          readOnly: true
          type: string
        'Inserted':
          nullable: true
          readOnly: false
          type: boolean
        'ConnectedVia':
          $ref: '#/components/schemas/ConnectedVia'
          nullable: true
          readOnly: true
        'MediaTypes':
          items:
            type: string
          readOnly: true
          type: array
        'WriteProtected':
          nullable: true
          readOnly: false
          type: boolean
        'UserName':
          nullable: true
          readOnly: false
          type: string
        'Password':
          nullable: true
          readOnly: false
          type: string
        'TransferMethod':
          $ref: '#/components/schemas/TransferMethod'
          nullable: true
          readOnly: false
        'TransferProtocolType':
          $ref: '#/components/schemas/TransferProtocolType'
          nullable: true
          readOnly: false
        'Actions':
          type: object
          additionalProperties: false
          properties:
            '#VirtualMedia.EjectMedia':
              type: object
              properties:
                'target':
                  $ref: '#/components/schemas/odataId'
            '#VirtualMedia.InsertMedia':
              type: object
              properties:
                'target':
                  $ref: '#/components/schemas/odataId'
    InsertMediaRequestBody:
      additionalProperties: false
      properties:
        Image:
          type: string
        Inserted:
          type: boolean
        Password:
          type: string
        TransferMethod:
          $ref: '#/components/schemas/TransferMethod'
        TransferProtocolType:
          $ref: '#/components/schemas/TransferProtocolType'
        UserName:
          type: string
        WriteProtected:
          type: boolean
      required:
      - Image
      type: object
    EjectMediaRequestBody:
      additionalProperties: false
      properties: {}
      type: object
    FirmwareInventory:
      type: object
      properties:
        '@odata.id':
          $ref: '#/components/schemas/odataId'
    UpdateService:
      type: object
      additionalProperties: false
      description: Redfish Update Service.
      required:
      - '@odata.id'
      - '@odata.type'
      - 'Name'
      properties:
        'FirmwareInventory':
          $ref: '#/components/schemas/FirmwareInventory'
        'Id':
          $ref: '#/components/schemas/id'
        'Name':
          $ref: '#/components/schemas/name'
        '@odata.type':
          $ref: '#/components/schemas/rtype'
        '@odata.id':
          $ref: '#/components/schemas/odataId'
        '@odata.context':
          $ref: '#/components/schemas/context'
        'Description':
          type: string
          description: "description"
          nullable: true
          readOnly: true
        'HttpPushUri':
          format: uri-reference
          readOnly: true
          type: string
        'ServiceEnabled':
          nullable: true
          readOnly: false
          type: boolean
        'Actions':
          type: object
          additionalProperties: false
          properties:
            '#UpdateService.SimpleUpdate':
              type: object
              properties:
                'target':
                  $ref: '#/components/schemas/odataId'
            '#UpdateService.StartUpdate':
              type: object
              properties:
                'target':
                  $ref: '#/components/schemas/odataId'
    SimpleUpdateRequestBody:
      additionalProperties: false
      properties:
        ImageURI:
          format: uri-reference
          type: string
        Targets:
          type: array
          items:
            type: string
        TransferProtocolType:
          $ref: '#/components/schemas/TransferProtocolType'
      required:
      - ImageURI
      type: object
    Payload:
      additionalProperties: false
      description: The HTTP and JSON payload details for this Task.
      properties:
        HttpHeaders:
          description: This represents the HTTP headers used in the operation of this
            Task.
          items:
            type: string
          readOnly: true
          type: array
          x-longDescription: The value of this property shall be an array of HTTP
            headers used in the execution of this Task.
        HttpOperation:
          description: The HTTP operation to perform to execute this Task.
          readOnly: true
          type: string
          x-longDescription: This property shall contain the HTTP operation to execute
            for this Task.
        JsonBody:
          description: This property contains the JSON payload to use in the execution
            of this Task.
          readOnly: true
          type: string
          x-longDescription: The value of this property shall be JSON formatted payload
            used for this Task.
        TargetUri:
          description: The URI of the target for this task.
          format: uri
          readOnly: true
          type: string
          x-longDescription: This property shall contain a URI referencing a location
            to be used as the target for an HTTP operation.
      type: object
      x-longDescription: This object shall contain information detailing the HTTP
        and JSON payload information for executing this Task.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_.]+$:
          description: This property shall specify a valid odata or Redfish property.
    Task:
      additionalProperties: false
      description: This resource contains information about a specific Task scheduled
        by or being executed by a Redfish service's Task Service.
      properties:
        '@odata.context':
          $ref: '#/components/schemas/context'
        '@odata.etag':
          $ref: '#/components/schemas/etag'
        '@odata.id':
          $ref: '#/components/schemas/id'
        '@odata.type':
          $ref: '#/components/schemas/rtype'
        Description:
          type: string
          description: "description"
          nullable: true
          readOnly: true
        EndTime:
          description: The date-time stamp that the task was last completed.
          format: date-time
          readOnly: true
          type: string
          x-longDescription: The value of this property shall indicate the time the
            task was completed.
        HidePayload:
          description: Indicates that the contents of the Payload should be hidden
            from view after the Task has been created.  When set to True, the Payload
            object will not be returned on GET.
          readOnly: true
          type: boolean
          x-longDescription: This property shall be set to True if the Payload object
            shall not be returned on GET operations, and set to False if the contents
            can be returned normally. If this property is not specified when the Task
            is created, the default value shall be False.
        Id:
          $ref: '#/components/schemas/id'
          readOnly: true
        Messages:
          description: This is an array of messages associated with the task.
          items:
            $ref: '#/components/schemas/Message'
          type: array
          x-longDescription: The value of this property shall be an array of messages
            associated with the task.
        Name:
          $ref: '#/components/schemas/name'
          readOnly: true
        Oem:
          type: string
          description: This is the manufacturer/provider specific extension moniker
            used to divide the Oem object into sections.
          x-longDescription: The value of this string shall be of the format for the
            reserved word *Oem*.
        Payload:
          $ref: '#/components/schemas/Payload'
          description: The HTTP and JSON payload details for this task.
          x-longDescription: This object shall contain information detailing the HTTP
            and JSON payload information for executing this task. This object shall
            not be included in the response if the HidePayload property is set to
            True.
        StartTime:
          description: The date-time stamp that the task was last started.
          format: date-time
          readOnly: true
          type: string
          x-longDescription: The value of this property shall indicate the time the
            task was started.
        TaskMonitor:
          description: The URI of the Task Monitor for this task.
          format: uri
          readOnly: true
          type: string
          x-longDescription: This property shall contain a URI to Task Monitor as
            defined in the Redfish Specification.
        TaskState:
          $ref: '#/components/schemas/TaskState'
          description: The state of the task.
          readOnly: true
          x-longDescription: The value of this property shall indicate the state of
            the task.  New shall be used to indicate that the task is a new task which
            has just been instantiated and is in the initial state and indicates it
            has never been started.  Starting shall be used to indicate that the task
            is moving from the New, Suspended, or Service states into the Running
            state.  Running shall be used to indicate that the Task is running.  Suspended
            shall be used to indicate  that the Task is stopped (e.g., by a user),
            but can be restarted in a seamless manner.  Interrupted shall be used
            to indicate  that the Task was interrupted (e.g., by a server crash) in
            the middle of processing, and the user should either re-run/restart the
            Task.  Pending shall be used to indicate  that the Task has been queued
            and will be scheduled for processing as soon as resources are available
            to handle the request.  Stopping shall be used to indicate that the Task
            is in the process of moving to a Completed, Killed, or Exception state.  Completed
            shall be used to indicate that the task has completed normally.  Killed
            shall be used to indicate  that the task has been stopped by a Kill state
            change request (non-graceful shutdown).  Exception shall be used to indicate  that
            the Task is in an abnormal state that might be indicative of an error
            condition.  Service shall be used to indicate that the Task is in a state
            that supports problem discovery, or resolution, or both.  This state is
            used when a corrective action is possible.
        TaskStatus:
          $ref: '#/components/schemas/Health'
          description: This is the completion status of the task.
          readOnly: true
          x-longDescription: The value of this property shall be the completion status
            of the task, as defined in the Status section of the Redfish specification
            and shall not be set until the task has completed.
      required:
      - '@odata.id'
      - '@odata.type'
      - Id
      - Name
      type: object
      x-longDescription: This resource shall be used to represent a task for a Redfish
        implementation.
      x-patternProperties:
        ^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\.[a-zA-Z_][a-zA-Z0-9_.]+$:
          description: This property shall specify a valid odata or Redfish property.
    TaskState:
      enum:
      - New
      - Starting
      - Running
      - Suspended
      - Interrupted
      - Pending
      - Stopping
      - Completed
      - Killed
      - Exception
      - Service
      - Cancelling
      - Cancelled
      type: string
      x-enumDeprecated:
        Killed: This value has been deprecated and is being replaced by the value
          Cancelled which has more determinate semantics.
      x-enumDescriptions:
        Cancelled: Task has been cancelled by an operator or internal process.
        Cancelling: Task is in the process of being cancelled.
        Completed: Task has completed.
        Exception: Task has stopped due to an exception condition.
        Interrupted: Task has been interrupted.
        Killed: Task was terminated.
        New: A new task.
        Pending: Task is pending and has not started.
        Running: Task is running normally.
        Service: Task is running as a service.
        Starting: Task is starting.
        Stopping: Task is in the process of stopping.
        Suspended: Task has been suspended.
      x-enumLongDescriptions:
        Cancelled: This value shall represent that the operation was cancelled either
          through a Delete on a Task Monitor or Task Resource or by an internal process.
        Cancelling: This value shall represent that the operation is in the process
          of being cancelled.
        Completed: This value shall represent that the operation is complete and completed
          sucessfully or with warnings.
        Exception: This value shall represent that the operation is complete and completed
          with errors.
        Interrupted: This value shall represent that the operation has been interrupted
          but is expected to restart and is therefore not complete.
        Killed: This value shall represent that the operation is complete because
          the task was killed by an operator.
        New: This value shall represent that this task is newly created but the operation
          has not yet started.
        Pending: This value shall represent that the operation is pending some condition
          and has not yet begun to execute.
        Running: This value shall represent that the operation is executing.
        Service: This value shall represent that the operation is now running as a
          service and expected to continue operation until stopped or killed.
        Starting: This value shall represent that the operation is starting.
        Stopping: This value shall represent that the operation is stopping but is
          not yet complete.
        Suspended: This value shall represent that the operation has been suspended
          but is expected to restart and is therefore not complete.

paths:
  /redfish/v1:
    get:
      operationId: get_root
      responses:
        '200':
          description: Get redfish root
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Root'
  /redfish/v1/Systems:
    get:
      operationId: list_systems
      responses:
        '200':
          description: Computer Systems List
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Collection'
  /redfish/v1/Systems/{systemId}:
    get:
      operationId: get_system
      responses:
        '200':
          description: Computer Systems List
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ComputerSystem'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedfishError'
          description: Error condition
    patch:
      operationId: set_system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputerSystem'
        required: true
      responses:
        '200':
          description: ComputerSystem Properties set successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputerSystem'
        '204':
          description: Success, but no response data
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedfishError'
          description: Error condition
    parameters:
    - name: systemId
      in: path
      description: ID of resource
      required: true
      schema:
        type: string
  /redfish/v1/Systems/{ComputerSystemId}/Actions/ComputerSystem.Reset:
    parameters:
    - in: path
      name: ComputerSystemId
      required: true
      schema:
        type: string
    post:
      operationId: reset_system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetRequestBody'
        required: true
      responses:
        '200':
          description: Success with response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedfishError'
        '204':
          description: Success, but no response data
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedfishError'
          description: Error condition
  /redfish/v1/Managers:
    get:
      operationId: list_managers
      responses:
        '200':
          description: Managers List
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Collection'
  /redfish/v1/Managers/{managerId}:
    get:
      operationId: get_manager
      responses:
        '200':
          description: Get Manager
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Manager'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedfishError'
          description: Error condition

    parameters:
    - name: managerId
      in: path
      description: ID of resource
      required: true
      schema:
        type: string
  /redfish/v1/Managers/{managerId}/VirtualMedia:
    get:
      operationId: list_manager_virtual_media
      responses:
        '200':
          description: "Get a list of Manager's virtual media"
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Collection'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedfishError'
          description: Error condition

    parameters:
    - name: managerId
      in: path
      description: ID of resource
      required: true
      schema:
        type: string
  /redfish/v1/Managers/{managerId}/VirtualMedia/{virtualMediaId}:
    get:
      operationId: get_manager_virtual_media
      responses:
        '200':
          description: "Get a list of Manager's virtual media"
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/VirtualMedia'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedfishError'
          description: Error condition

    parameters:
    - name: managerId
      in: path
      description: ID of resource
      required: true
      schema:
        type: string
    - name: virtualMediaId
      in: path
      description: ID of resource
      required: true
      schema:
        type: string
  /redfish/v1/Managers/{managerId}/VirtualMedia/{virtualMediaId}/Actions/VirtualMedia.InsertMedia:
    post:
      operationId: insert_virtual_media
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertMediaRequestBody'
        required: true
      responses:
        '200':
          description: "Insert virtual media"
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RedfishError'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedfishError'
          description: Error condition
    parameters:
    - name: managerId
      in: path
      description: ID of resource
      required: true
      schema:
        type: string
    - name: virtualMediaId
      in: path
      description: ID of resource
      required: true
      schema:
        type: string
  /redfish/v1/Managers/{managerId}/VirtualMedia/{virtualMediaId}/Actions/VirtualMedia.EjectMedia:
    post:
      operationId: eject_virtual_media
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EjectMediaRequestBody'
        required: true
      responses:
        '200':
          description: "Insert virtual media"
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RedfishError'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedfishError'
          description: Error condition
    parameters:
    - name: managerId
      in: path
      description: ID of resource
      required: true
      schema:
        type: string
    - name: virtualMediaId
      in: path
      description: ID of resource
      required: true
      schema:
        type: string
  /redfish/v1/UpdateService:
    get:
      operationId: Update_Service
      responses:
        '200':
          description: Update Service
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UpdateService'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedfishError'
          description: Error condition
  /redfish/v1/UpdateService/Actions/UpdateService.SimpleUpdate:
    post:
      operationId: UpdateService_Simple_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleUpdateRequestBody'
        required: true
      responses:
        '200':
          description: "Update Service Simple Update"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedfishError'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedfishError'
          description: Error condition
  /redfish/v1/UpdateService/FirmwareInventory:
    get:
      operationId: Firmware_Inventory
      responses:
        '200':
          description: Collection of Firmware Inventory 
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Collection'
    post:
      operationId: FirmwareInventory_Download_Image
      requestBody:
        content:
          multipart/formdata:
            schema:
              type: object 
              properties:
                 softwareImage:
                    type: string
                    format: binary
            encoding:
              softwareImage:
                 contentType: application/octet-stream
        required: true
      responses:
        '200':
          description: "Update Service Simple Update"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedfishError'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedfishError'
          description: Error condition
  /redfish/v1/TaskService/Tasks/{taskId}:
    get:
      operationId: get_task
      responses:
        '200':
          description: "Get details of a Task"
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Task'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedfishError'
          description: Error condition
    parameters:
    - name: taskId
      in: path
      description: Task ID
      required: true
      schema:
        type: string
